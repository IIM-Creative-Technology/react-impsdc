[{"D:\\DEV_WEB\\IIM_PROJECTS\\REACT\\react-impsdc\\src\\index.js":"1","D:\\DEV_WEB\\IIM_PROJECTS\\REACT\\react-impsdc\\src\\App.js":"2","D:\\DEV_WEB\\IIM_PROJECTS\\REACT\\react-impsdc\\src\\reportWebVitals.js":"3","D:\\DEV_WEB\\IIM_PROJECTS\\REACT\\react-impsdc\\src\\views\\QuizzPlayer\\QuizzList.js":"4","D:\\DEV_WEB\\IIM_PROJECTS\\REACT\\react-impsdc\\src\\_helpers\\axios.js":"5","D:\\DEV_WEB\\IIM_PROJECTS\\REACT\\react-impsdc\\src\\views\\QuizzPlayer\\QuizzDetails.js":"6","D:\\DEV_WEB\\IIM_PROJECTS\\REACT\\react-impsdc\\src\\views\\QuizzPlayer\\QuizzPlayer.js":"7","D:\\DEV_WEB\\IIM_PROJECTS\\REACT\\react-impsdc\\src\\views\\QuizzPlayer\\QuizzResults.js":"8","D:\\DEV_WEB\\IIM_PROJECTS\\REACT\\react-impsdc\\src\\views\\Login.js":"9","D:\\DEV_WEB\\IIM_PROJECTS\\REACT\\react-impsdc\\src\\components\\user\\login.js":"10"},{"size":517,"mtime":1612737117143,"results":"11","hashOfConfig":"12"},{"size":553,"mtime":1612737117142,"results":"13","hashOfConfig":"12"},{"size":375,"mtime":1612707189904,"results":"14","hashOfConfig":"12"},{"size":745,"mtime":1612737117980,"results":"15","hashOfConfig":"12"},{"size":798,"mtime":1612737118023,"results":"16","hashOfConfig":"12"},{"size":3957,"mtime":1612737117989,"results":"17","hashOfConfig":"12"},{"size":4112,"mtime":1612737117972,"results":"18","hashOfConfig":"12"},{"size":2397,"mtime":1612737117949,"results":"19","hashOfConfig":"12"},{"size":1715,"mtime":1612737117998,"results":"20","hashOfConfig":"12"},{"size":3241,"mtime":1612737118014,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"53q7rz",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"28"},"D:\\DEV_WEB\\IIM_PROJECTS\\REACT\\react-impsdc\\src\\index.js",[],"D:\\DEV_WEB\\IIM_PROJECTS\\REACT\\react-impsdc\\src\\App.js",[],"D:\\DEV_WEB\\IIM_PROJECTS\\REACT\\react-impsdc\\src\\reportWebVitals.js",[],["48","49"],"D:\\DEV_WEB\\IIM_PROJECTS\\REACT\\react-impsdc\\src\\views\\QuizzPlayer\\QuizzList.js",[],"D:\\DEV_WEB\\IIM_PROJECTS\\REACT\\react-impsdc\\src\\_helpers\\axios.js",[],"D:\\DEV_WEB\\IIM_PROJECTS\\REACT\\react-impsdc\\src\\views\\QuizzPlayer\\QuizzDetails.js",["50","51","52","53"],"import React  from \"react\"\r\nimport \"../../scss/components/quizz/quizz-card-component.scss\"\r\nimport axios from \"../../_helpers/axios\"\r\nimport Btn from \"../../components/btn\"\r\nimport { HashLink as Link } from 'react-router-hash-link';\r\n\r\nconst LeaderboardItem = ({score, rank, key}) => {\r\n    return(\r\n        <div style={{background: \"#500ad2\", color: \"#fff\", padding: '1em', display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\", marginBottom: \"15px\", boxShadow: '3px 3px 20px rgba(0,0,0,.1)', borderRadius: '10px'}}>\r\n            <span style={{display: \"flex\", alignItems: \"center\"}}>\r\n                {rank}. \r\n                <span style={{fontWeight: \"bolder\", cursor: \"pointer\", marginRight: \"20px\"}}>{score.player.username}</span>\r\n                { rank === 1 ? <img style={{height: \"20px\", width: \"20px\"}} src='https://www.flaticon.com/svg/vstatic/svg/2583/2583344.svg?token=exp=1612732044~hmac=affdd0e194bae124b019fe4dfd0b9c50'/> : ''}\r\n                { rank === 2 ? <img style={{height: \"20px\", width: \"20px\"}} src='https://www.flaticon.com/svg/vstatic/svg/179/179251.svg?token=exp=1612732244~hmac=baeed20d7843d217293ecbf0628ee9a1'/> : ''}\r\n                { rank === 3 ? <img style={{height: \"20px\", width: \"20px\"}} src='https://www.flaticon.com/svg/vstatic/svg/179/179250.svg?token=exp=1612732276~hmac=ed701bcc0eae24636300ebf4d45651af'/> : ''}\r\n            </span>\r\n            <span>{score.playerScore} / {score.quizzTotalScore}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Leaderboard = ({playerScores}) => {\r\n    console.log({playerScores})\r\n    // let sortedScores = playerScores.sort((a, b) => a.playerScore - b.playerScore)\r\n    return (\r\n            <>\r\n                {\r\n                    playerScores.map((score, key) => {\r\n                        return (\r\n                            <LeaderboardItem key={key} rank={key + 1} score={score}/>\r\n                        )\r\n                    })\r\n                }\r\n            </>\r\n    )\r\n}\r\nclass QuizzDetails extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            fetching: false,\r\n            quizzData: {},\r\n            playerScores: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(!localStorage.getItem('player')) this.props.history.push('/login')\r\n        this.setState({...this.state, isFetching: true});\r\n        axios.get(`/quizz/${this.props.match.params.quizzId}`)\r\n        .then(response => {\r\n            console.log(response)\r\n            this.setState({quizzData: response.data.data, playerScores: response.data.data.playerScores, isFetching: false});\r\n        }).catch((err) => {\r\n            console.error(err)\r\n            this.setState({...this.state, isFetching: false});\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                {this.state.isFetching ? \r\n                    <p>'Fetching quizz data ...'</p> :\r\n                    <div>\r\n                        <div className=\"quizzCard\" style={{marginTop: \"50px\"}}>   \r\n                            <h3 className=\"title\">{this.state.quizzData.title}</h3>\r\n                            <hr style={{opacity: .3, backgroundColor: \"lightgrey\"}}/>\r\n                            <p className=\"description\">{this.state.quizzData.description}</p>\r\n                            <div style={{display:\"grid\", placeItems: \"center\", width: \"100%\"}}>\r\n                                <Btn content=\"START QUIZZ\"  slug={`/quizz/player/${this.state.quizzData.id}`}/>\r\n                            </div>\r\n                        </div>\r\n                        <div style={{marginTop: \"25px\", padding: \"1.2em\"}}>\r\n                            <h3>Quizz leaderboard : </h3>\r\n                            <Leaderboard playerScores={this.state.playerScores}/>\r\n                        </div>\r\n                    </div>\r\n                }    \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default QuizzDetails;\r\n","D:\\DEV_WEB\\IIM_PROJECTS\\REACT\\react-impsdc\\src\\views\\QuizzPlayer\\QuizzPlayer.js",["54","55"],"import React from \"react\"\r\nimport axios from \"../../_helpers/axios\"\r\nimport QuestionCard from \"../../components/QuizzPlayer/QuestionCard\"\r\n\r\nconst TopBar = ({currentQuestion, totalNbQuestions, quizzTitle}) => {\r\n    return (\r\n        <div style={{borderBottomRightRadius: \"10px\", borderBottomLeftRadius: \"10px\", height: \"fit-content\", width: \"100%\", padding: '1.2em', background:\"#500ad2\", display: \"flex\", justifyContent: \"space-between\", placeItems: \"center\", color: \"#fff\"}}>\r\n            <h3 style={{textTransform: \"uppercase\"}}>QUIZZ : « {quizzTitle} »</h3>\r\n            <div>Question {currentQuestion + 1} / {totalNbQuestions}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default class QuizzPlayer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            fetched: false,\r\n            quizzData: {},\r\n            currentQuestionKey: 0,\r\n            quizzEndLoading: false,\r\n            playerScoreData: {\r\n                playerId: null,\r\n                quizzId: null,\r\n                playerScore: 0,\r\n                quizzTotalScore: 0,\r\n                playerAwnsers: []\r\n            },\r\n\r\n        }\r\n    }\r\n\r\n    async getPlayerId() {\r\n        return 1\r\n    }\r\n\r\n    triggerNextQuestion(selectedAwnser) {\r\n        console.log({ selectedAwnser })\r\n        let newScore = this.state.playerScoreData.playerScore + (selectedAwnser.isCorrectAwnser ? 1 : 0)\r\n        console.log({ newScore })\r\n        this.setState({ playerScoreData: { ...this.state.playerScoreData, playerScore: newScore } });\r\n        this.setState({ playerScore: newScore });\r\n        if (this.state.quizzData.questions.find((question, key) => key === this.state.currentQuestionKey + 1)) this.setState({ currentQuestionKey: this.state.currentQuestionKey + 1 })\r\n\r\n        else {\r\n            this.setState({ quizzEndLoading: true })\r\n            this.savePlayerScore()\r\n        }\r\n    }\r\n\r\n    savePlayerScore = () => {\r\n        axios.post('/playerScore/create', this.state.playerScoreData)\r\n            .then(response => {\r\n                this.setState({ quizzEndLoading: false })\r\n                this.props.history.push(`/results/${response.data.playerScoreId}`)\r\n            }).catch((err) => {\r\n                console.error(err)\r\n            })\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        if(!localStorage.getItem('player')) this.props.history.push('/login')\r\n        axios.get(`/quizz/${this.props.match.params.quizzId}`)\r\n            .then(async response => {\r\n                if (!response.data.data) this.props.history.push('/quizz/list')\r\n                let quizzData = response.data.data\r\n                let playerId = await this.getPlayerId()\r\n                this.setState({ quizzData: response.data.data, fetched: true });\r\n                this.setState({ playerScoreData: { ...this.state.playerScoreData, quizzTotalScore: quizzData.questions.length, quizzId: quizzData.id, playerId: playerId } });\r\n\r\n            }).catch((err) => {\r\n                console.error(err)\r\n                this.setState({ ...this.state, isFetching: false });\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <TopBar quizzTitle={this.state.quizzData.title} currentQuestion={this.state.currentQuestionKey} totalNbQuestions={this.state.playerScoreData.quizzTotalScore} />\r\n                {!this.state.quizzEndLoading ?\r\n                    <div>\r\n                        {!this.state.fetched ? <p>'Fetching quizz list ...'</p> :\r\n                            <div className=\"\">\r\n                                {this.state.quizzData.questions.map((quizz, key) => {\r\n                                    if (this.state.currentQuestionKey == key) return (<QuestionCard triggerNextQuestion={this.triggerNextQuestion.bind(this)} key={key} question={quizz} />)\r\n                                })}\r\n                            </div>\r\n                        }\r\n                    </div> :\r\n\r\n\r\n                    <div>Please wait, your quizz results are being processed ...</div>\r\n                }\r\n\r\n            </div>\r\n        )\r\n    }\r\n}","D:\\DEV_WEB\\IIM_PROJECTS\\REACT\\react-impsdc\\src\\views\\QuizzPlayer\\QuizzResults.js",["56"],"import React from \"react\"\r\nimport Btn from \"../../components/btn\"\r\nimport axios from \"../../_helpers/axios\"\r\n\r\nconst S3_BASE_URL = 'https://iim-quizz-project.s3.eu-central-1.amazonaws.com'\r\n\r\nexport default class QuizzResults extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            fetched: false,\r\n            playerScoreData: {},\r\n            quizz: {}\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(!localStorage.getItem('player')) this.props.history.push('/login')\r\n        axios.get(`/playerScore/${this.props.match.params.playerScoreId}`)\r\n        .then((response) => {\r\n            if(!response.data.data) console.log(response)\r\n            else this.setState({fetched: true, playerScoreData: response.data.data, quizz: response.data.data.quizz})\r\n        }).catch((err) => {\r\n            console.error(err)\r\n        })\r\n    }\r\n\r\n    downloadCertificate () {\r\n        window.open(`${S3_BASE_URL}/${this.state.playerScoreData.certificate}`, \"_blank\");\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{display:\"grid\", placeItems: \"center\", width: \"100%\", height: \"100vh\"}}>\r\n               { !this.state.fetched ? (<div></div>) : \r\n                    <div style={{width: \"50%\", height: \"fit-content\", padding: \"2em\", textAlign: \"center\", borderRadius: '15px', boxShadow: \"3px 3px 20px rgba(0,0,0,.2)\"}}>\r\n                        <h2 style={{color: \"#500ad2\", fontFamily: \"'Montserrat', sans-serif\", fontSize: \"30px\"}}>Congratulations !</h2>\r\n                        \r\n                        <img style={{height: \"160px\"}} src=\"../../congrat.svg\"/>\r\n                        <p>You have successfuly completed the quizz <span style={{color: \"#500ad2\"}}>\"{this.state.quizz.title}\"</span></p>\r\n                        <p>Your score : {this.state.playerScoreData.playerScore} / {this.state.playerScoreData.quizzTotalScore}</p>\r\n                        <div style={{display: \"flex\", justifyContent: \"space-evenly\"}}>\r\n                            <Btn onClick={() => {this.props.history.push('/quizz/list')}} content=\"Return to the QuizzList\" inverse={\"True\"} />\r\n                            <div onClick={this.downloadCertificate.bind(this)}><Btn content=\"Download your certificate\"/></div>\r\n                        </div>\r\n                    </div>\r\n               }\r\n            </div>\r\n        )\r\n    }\r\n}","D:\\DEV_WEB\\IIM_PROJECTS\\REACT\\react-impsdc\\src\\views\\Login.js",["57"],"import React from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport \"../scss/helpers/reset.scss\";\r\nimport LoginForm from \"../components/user/login\"\r\nimport RegisterForm from \"../components/user/register\"\r\nimport Btn from \"../components/btn\";\r\n\r\n\r\nexport default class Login extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      active: true,\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (localStorage.getItem('player')) this.props.history.push('/quizz/list')\r\n  }\r\n\r\n  toggle() {\r\n    this.setState(state => ({\r\n      active: !state.active\r\n    }));\r\n  }\r\n\r\n  renderComponent() {\r\n    if (this.state.active) {\r\n      return (\r\n        <div>\r\n          <LoginForm />\r\n          <div className=\"contain col\">\r\n            <p>Or</p>\r\n            <div onClick={this.toggle.bind(this)}>\r\n              <Btn content={'Sign in'} slug={null} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n    else {\r\n      return (\r\n        <div>\r\n          <RegisterForm />\r\n          <div className=\"contain col\">\r\n            <p>Or</p>\r\n            <div onClick={this.toggle.bind(this)}>\r\n              <Btn content={'Login'} slug={null} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n  render() {\r\n    const active = this.state.active;\r\n    return (\r\n      <div class=\"login\">\r\n        <Helmet>\r\n          <html lang=\"en\" />\r\n          <title>Quiz Paul Santamaria</title>\r\n          <meta name=\"description\" content=\"Here is the quizz of Paul Santamaria\" />\r\n          <meta name=\"theme-color\" content=\"#fff\" />\r\n        </Helmet>\r\n        <div>\r\n          {this.renderComponent()}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}","D:\\DEV_WEB\\IIM_PROJECTS\\REACT\\react-impsdc\\src\\components\\user\\login.js",["58"],"import React from \"react\";\r\nimport \"../../scss/components/user/login-component.scss\";\r\nimport \"../../scss/components/generic/form-component.scss\";\r\nimport TextInput from \"../textInput\";\r\nimport Btn from \"../btn\";\r\nimport axios from \"axios\"\r\nimport md5 from \"md5\";\r\n\r\nexport default class LoginForm extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            username : \"\",\r\n            password : \"\",\r\n            error : {\r\n                state:false,\r\n                description:\"\"\r\n            }\r\n        }\r\n    }\r\n\r\n    onChange = (e) => {\r\n        /*\r\n          Because we named the inputs to match their\r\n          corresponding values in state, it's\r\n          super easy to update the state\r\n        */\r\n        this.setState({ [e.target.name]: e.target.value });\r\n      }\r\n\r\n    handleForm(e) {\r\n        e.preventDefault()\r\n        const username = this.state.username\r\n        const password = md5(this.state.password)\r\n        console.log({username, password})\r\n        axios.post(`${process.env.REACT_APP_QUIZZ_API}/player/auth`, {username, password})\r\n                .then((res) => {\r\n                    console.log(res)\r\n                    if(res.data.success){\r\n                        localStorage.setItem('player', JSON.stringify({accessToken: res.data.accessToken, player: res.data.player}))\r\n                        this.props.history.push('/quizz/list')\r\n                    }\r\n                    else{\r\n                        this.setState({\r\n                            error: {\r\n                                state:true,\r\n                                description: \"invalid credentials\"\r\n                            }\r\n                        })\r\n                    }\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error);\r\n                });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={'contain'}>    \r\n                {this.state.error.state ? \r\n                    <p className={'error'}>{this.state.error.description}</p>   \r\n                    :''\r\n                }    \r\n                <form className={'form-component'}>\r\n                    <input ref={(ref) => this.username = ref} \r\n                         name=\"username\"\r\n                         value={this.state.username}\r\n                         onChange={this.onChange}\r\n                         type=\"text\"\r\n                         className={\"text-input-component\"}\r\n                         placeholder=\"Username\"\r\n                         required \r\n                    />\r\n                    <input ref={(ref) => this.mdp = ref} \r\n                        name=\"password\"\r\n                        value={this.state.mdp}\r\n                        onChange={this.onChange}\r\n                        type=\"password\"\r\n                        className={\"text-input-component\"}\r\n                        placeholder='Password'\r\n                        required \r\n                    />\r\n\r\n                    <div onClick={this.handleForm.bind(this)}>\r\n                        <Btn  content=\"Login\"  slug={null} />\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}",{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":5,"column":22,"nodeType":"65","messageId":"66","endLine":5,"endColumn":26},{"ruleId":"67","severity":1,"message":"68","line":13,"column":32,"nodeType":"69","endLine":13,"endColumn":201},{"ruleId":"67","severity":1,"message":"68","line":14,"column":32,"nodeType":"69","endLine":14,"endColumn":199},{"ruleId":"67","severity":1,"message":"68","line":15,"column":32,"nodeType":"69","endLine":15,"endColumn":199},{"ruleId":"70","severity":1,"message":"71","line":86,"column":82,"nodeType":"72","messageId":"73","endLine":86,"endColumn":84},{"ruleId":"74","severity":1,"message":"75","line":87,"column":71,"nodeType":"76","messageId":"77","endLine":87,"endColumn":73},{"ruleId":"67","severity":1,"message":"68","line":39,"column":25,"nodeType":"69","endLine":39,"endColumn":81},{"ruleId":"63","severity":1,"message":"78","line":56,"column":11,"nodeType":"65","messageId":"66","endLine":56,"endColumn":17},{"ruleId":"63","severity":1,"message":"79","line":4,"column":8,"nodeType":"65","messageId":"66","endLine":4,"endColumn":17},"no-native-reassign",["80"],"no-negated-in-lhs",["81"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'active' is assigned a value but never used.","'TextInput' is defined but never used.","no-global-assign","no-unsafe-negation"]